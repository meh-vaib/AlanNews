{"ast":null,"code":"var _jsxFileName = \"D:\\\\AlanNews\\\\newsapp\\\\src\\\\components\\\\NewsCards\\\\NewsCards.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport useStyles from './styles.js';\nimport NewsCard from '../NewsCard/NewsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n  const classes = useStyles();\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              variant: \"h4\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [infoCard.title.split(' ')[2], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 23\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 23\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              className: classes.matter,\n              children: [\"Try Saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 83\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 89\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          article: article,\n          activeArticle: activeArticle,\n          i: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = NewsCards;\nexport default NewsCards;\nvar _c;\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"names":["React","Grid","Grow","Typography","useStyles","NewsCard","jsxDEV","_jsxDEV","infoCards","color","title","text","info","NewsCards","articles","activeArticle","_s","classes","length","in","children","className","container","alignItems","spacing","map","infoCard","item","xs","sm","md","lg","card","style","backgroundColor","variant","fileName","_jsxFileName","lineNumber","columnNumber","split","matter","article","i","display","_c","$RefreshReg$"],"sources":["D:/AlanNews/newsapp/src/components/NewsCards/NewsCards.js"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Grow, Typography } from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\n\r\n\r\nconst infoCards = [\r\n  { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\r\n  { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n  { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n  { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n];\r\n\r\nconst NewsCards = ({ articles, activeArticle }) => {\r\n  const classes = useStyles();\r\n\r\n  if(!articles.length){\r\n    return(\r\n      <Grow in>\r\n        <Grid className={classes.container} container alignItems='stretch' spacing={3}>\r\n          {infoCards.map((infoCard)=>(\r\n            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\r\n              <div className={classes.card} style={{backgroundColor: infoCard.color}}>\r\n                  <Typography className={classes.title} variant=\"h4\">{infoCard.title}</Typography>\r\n                  { infoCard.info?\r\n                    ( <Typography variant=\"h7\">\r\n                      <strong>\r\n                        {infoCard.title.split(' ')[2]}:\r\n                      </strong>\r\n                      <br/>\r\n                        {infoCard.info}\r\n                    </Typography>\r\n                    ): null\r\n                  }\r\n                  <Typography variant=\"h7\" className={classes.matter}>Try Saying: <br/> <i>{infoCard.text}</i></Typography>\r\n              </div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grow>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <Grow in>\r\n        <Grid className={classes.container} container alignItems='stretch' spacing={3}>\r\n          {articles.map((article, i) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: 'flex' }}>\r\n              <NewsCard article={article} activeArticle={activeArticle} i={i} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grow>\r\n  );\r\n}\r\n\r\nexport default NewsCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}